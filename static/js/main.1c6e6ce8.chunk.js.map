{"version":3,"sources":["helpers/asyncSetTimeout.js","algorithms/selection-sort.js","helpers/randomizeArray.js","components/SortingBar/SortingBar.jsx","assets/images/gh-logo.png","components/HomeHeader/AlgorithmDropDown.jsx","components/HomeHeader/InputSizeSlider.jsx","components/HomeHeader/RandomizeButton.jsx","components/HomeHeader/SpeedSlider.jsx","components/HomeHeader/StartButton.jsx","components/HomeHeader/NightToggle.jsx","components/HomeHeader/HomeHeader.jsx","algorithms/bubble-sort.js","algorithms/insertion-sort.js","algorithms/inplace-merge-sort.js","algorithms/merge-sort.js","algorithms/quick-sort-l.js","algorithms/quick-sort-lr.js","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["asyncSetTimeout","timeout","Promise","resolve","reject","setTimeout","selectionSort","a","array","setArray","setColorsArray","visualizationSpeed","concat","len","length","i","minIndex","j","newColorsArray","Array","fill","temp","console","log","generateRandomizedArray","arraySize","randomizedArray","push","Math","floor","random","SortingBar","props","color","colorCode","style","backgroundColor","AlgorithmDropDown","currentAlgorithm","algorithms","onAlgorithmChange","menu","width","map","algorithm","idx","Item","onClick","overlay","trigger","height","padding","fontWeight","background","display","justifyContent","alignItems","cursor","DownOutlined","InputSizeSlider","onInputSizeChanged","isVisualizing","flexDirection","disabled","defaultValue","min","max","step","handleStyle","borderColor","trackStyle","onChange","RandomizeButton","marginTop","className","type","icon","RedoOutlined","SpeedSlider","onSpeedChange","StartButton","PlayCircleOutlined","Switch","state","checked","toggleChecked","setState","prevState","handleClick","e","preventDefault","onSwitch","this","prevProps","htmlFor","label","name","id","Component","HomeHeader","onRandomize","onStart","position","align","justify","window","location","reload","href","class","fontSize","marginLeft","algo","bubbleSort","insertionSort","currentValue","arr","mergeSort","l","r","mid","index","inplaceMergeSortWrapper","leftIndex","rightIndex","it","tempArr","k","mergeSortWrapper","partition","pivot","quickSort","quickSortLWrapper","left","right","quickSortLRWrapper","Home","useState","setIsVisualizing","setRandomizedArray","colorsArray","setVisualizationSpeed","maxItem","setMaxItem","setCurrentAlgorithm","nextRandomizedArray","onVisualize","val","margin","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c6e6ce8.chunk.js","sourcesContent":["const asyncSetTimeout = ({timeout} = {}) =>{\r\n    return new Promise((resolve,reject) => setTimeout(() => resolve(), timeout));\r\n}\r\n\r\nexport default asyncSetTimeout;","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nconst selectionSort = async ({\r\n  array,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n} = {}) => {\r\n  array = array.concat();\r\n\r\n  let len = array.length;\r\n  for (let i = 0; i < len; i++) {\r\n    let minIndex = i;\r\n\r\n    for (let j = i + 1; j < len; j++) {\r\n      const newColorsArray = new Array(len).fill(0);\r\n      newColorsArray[i] = 3;\r\n      newColorsArray[minIndex] = 1;\r\n      newColorsArray[j] = 2;\r\n      setColorsArray(newColorsArray);\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n      if (array[minIndex] > array[j]) {\r\n        minIndex = j;\r\n      }\r\n    }\r\n\r\n    let temp = array[i];\r\n    array[i] = array[minIndex];\r\n    array[minIndex] = temp;\r\n    array = array.concat();\r\n    setArray(array);\r\n    console.log(i);\r\n  }\r\n};\r\n\r\nexport default selectionSort;\r\n","const generateRandomizedArray = ({arraySize} = {}) =>{\r\n    let randomizedArray = [];\r\n\r\n    for(let i = 0; i < arraySize;i++){\r\n        randomizedArray.push(Math.floor(Math.random() * (100 - 10) + 10));\r\n    }\r\n    return randomizedArray;\r\n}\r\n\r\nexport default generateRandomizedArray;","import React from 'react';\r\n\r\nconst SortingBar = (props) => {\r\n  let color = '#efefef';\r\n\r\n  switch (props.colorCode) {\r\n    case 1:\r\n      color = '#02E095';\r\n      break;\r\n    case 2:\r\n      color = 'red';\r\n      break;\r\n    case 3:\r\n      color = 'yellow';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <div style={{...props.style, backgroundColor: color}}></div>;\r\n};\r\n\r\nexport default SortingBar;\r\n","export default __webpack_public_path__ + \"static/media/gh-logo.81f6de8e.png\";","import React from 'react';\r\nimport {Menu, Dropdown} from 'antd';\r\nimport {DownOutlined} from '@ant-design/icons';\r\n\r\nconst AlgorithmDropDown = ({\r\n  currentAlgorithm,\r\n  algorithms,\r\n  onAlgorithmChange,\r\n}) => {\r\n  const width = 170;\r\n\r\n  const menu = (\r\n    <Menu style={{width: width}}>\r\n      {algorithms.map(function (algorithm, idx) {\r\n        return (\r\n          <Menu.Item key={idx} onClick={() => onAlgorithmChange(algorithm)}>\r\n            {algorithm}\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown overlay={menu} trigger={['click']}>\r\n      <div\r\n        style={{\r\n          height: 40,\r\n          width: width,\r\n          padding: 10,\r\n          fontWeight: 'bold',\r\n          background: '#0D1929',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {currentAlgorithm} <DownOutlined />\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default AlgorithmDropDown;\r\n","import {Slider} from 'antd';\r\nimport React from 'react';\r\n\r\nconst InputSizeSlider = ({onInputSizeChanged, isVisualizing}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div style={{color: '#0D1929', fontWeight: 'bold'}}>Array Size</div>\r\n      <Slider\r\n        disabled={isVisualizing}\r\n        defaultValue={30}\r\n        min={10}\r\n        max={50}\r\n        step={2}\r\n        style={{width: 200}}\r\n        handleStyle={{borderColor: 'green'}}\r\n        trackStyle={{background: '#0D1929'}}\r\n        onChange={onInputSizeChanged}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSizeSlider;\r\n","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport {RedoOutlined} from '@ant-design/icons';\r\nimport \"./RandomizeButton.css\";\r\nconst RandomizeButton = ({onClick}) => {\r\n  return (\r\n    <div style={{marginTop: 8}}>\r\n      <Button\r\n      className=\"btn\"\r\n        type=\"primary\"\r\n        style={{\r\n          width: 130,\r\n          background: '#0D1929',\r\n          borderColor: '#0D1929',\r\n          fontWeight: 'bold',\r\n        }}\r\n        icon={<RedoOutlined />}\r\n        onClick={onClick}\r\n      >\r\n        Randomize\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomizeButton;\r\n","import {Slider} from 'antd';\r\nimport React from 'react';\r\n\r\nconst SpeedSlider = ({onSpeedChange, isVisualizing}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div style={{color: '#0D1929', fontWeight: 'bold'}}>\r\n        Visualization Speed\r\n      </div>\r\n      <Slider\r\n        disabled={isVisualizing}\r\n        defaultValue={10}\r\n        style={{width: 200}}\r\n        handleStyle={{borderColor: '#0D1929'}}\r\n        trackStyle={{background: '#0D1929'}}\r\n        onChange={onSpeedChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedSlider;\r\n","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport {PlayCircleOutlined} from '@ant-design/icons';\r\n\r\nconst StartButton = ({onClick}) => {\r\n  return (\r\n    <div style={{marginTop: 8}}>\r\n      <Button\r\n      className = \"but\"\r\n        type=\"primary\"\r\n        style={{\r\n          width: 130,\r\n          background: 'green',\r\n          borderColor: '#0D1929',\r\n          fontWeight: 'bold',\r\n        }}\r\n        icon={<PlayCircleOutlined />}\r\n        onClick={onClick}\r\n      >\r\n        Start\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartButton;","// import React from 'react';\r\n// import \"./NightToggle.css\";\r\n// const NightToggle = ({onToggle}) => {\r\n//     return (\r\n     \r\n//         <div style={{marginTop: 8}}>\r\n//             <nav class=\"nav\">\r\n//                 <input type=\"checkbox\" class=\"checkbox\" id=\"checkbox\" onClick={onToggle}>\r\n//                 <label for=\"checkbox\" class=\"label\">\r\n//                     <i class=\"fas fa-moon\"></i>\r\n//                     <i class=\"fas fa-sun\"></i>\r\n//                     <div class=\"ball\"></div>\r\n//                 </label>\r\n//                 </input>\r\n//             </nav>\r\n//         </div>\r\n        \r\n//     );\r\n// };\r\n\r\n// export default NightToggle\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./NightToggle.css\";\r\n\r\nclass Switch extends Component {\r\n  state = {\r\n    checked: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.checked) {\r\n      this.setState({ checked: this.props.checked });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.checked !== this.props.checked) {\r\n      this.setState({ checked: this.props.checked });\r\n    }\r\n  }\r\n\r\n  toggleChecked = () => {\r\n    this.setState((prevState) => ({ checked: !prevState.checked }));\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.toggleChecked();\r\n    this.props.onSwitch();\r\n  };\r\n\r\n  render() {\r\n    let Switch = `Switch`;\r\n    if (this.state.checked) Switch += ` Switch_checked`;\r\n    if (this.props.className) Switch += ` ${this.props.className}`;\r\n    return (\r\n      <div className={Switch}>\r\n        <label className=\"Switch__Label\" htmlFor=\"Switch__Thumb\">\r\n          {this.props.label}\r\n        </label>\r\n\r\n        <div className=\"Switch__Button\">\r\n          <div className=\"Switch__Track\"></div>\r\n          <input\r\n            className=\"Switch__Thumb\"\r\n            onClick={this.handleClick}\r\n            name=\"Switch__Thumb\"\r\n            id=\"Switch__Thumb\"\r\n            type=\"button\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwitch.propTypes = {\r\n  onSwitch: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Switch;\r\n\r\n","import { Row } from 'antd';\r\nimport React from 'react';\r\nimport assets from '../../assets';\r\nimport AlgorithmDropDown from './AlgorithmDropDown';\r\nimport InputSizeSlider from './InputSizeSlider';\r\nimport RandomizeButton from './RandomizeButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport StartButton from './StartButton';\r\nimport NightToggle from './NightToggle';\r\nimport \"./HomeHeader.css\";\r\n\r\nconst HomeHeader = ({\r\n  algorithms,\r\n  onAlgorithmChange,\r\n  currentAlgorithm,\r\n  onSpeedChange,\r\n  onInputSizeChanged,\r\n  onRandomize,\r\n  \r\n  onStart,\r\n  isVisualizing,\r\n}) => {\r\n  const openUrl = (url) => {\r\n    window.open(url, '_blank')?.focus();\r\n  };\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n  return (\r\n    <Row className=\"important\"\r\n      style={{\r\n        background: '#fff',\r\n        color: 'white',\r\n        padding: '10px 0px 10px 0px',\r\n        width: '100%',\r\n        position: 'fixed',\r\n  \r\n    width: '100%',\r\n    boxShadow: '0 .5rem 1.5rem rgba(0,0,0,.2)',\r\n    display: 'flex',\r\n    \r\n   \r\n    height: '10rem',\r\n    \r\n      }}\r\n      align=\"middle\"\r\n      justify=\"space-around\"\r\n    >\r\n      <div className=\"heading\"\r\n      width={125}\r\n      height={50}\r\n      style={{ cursor: 'pointer' }}\r\n      onClick =\r\n        {refreshPage}>\r\n          <a href=\"index.html\" class=\"logo\">\r\n      <i class=\"fab fa-sellsy\" style = {{fontSize: '40px' }}></i>\r\n       <span style = {{fontSize: '40px', marginLeft: '8px', fontWeight: 'bold'}} >Sorté.</span>\r\n       </a>\r\n          </div>  \r\n      \r\n\r\n      <AlgorithmDropDown\r\n        currentAlgorithm={currentAlgorithm}\r\n        algorithms={algorithms}\r\n        onAlgorithmChange={(algo) => onAlgorithmChange(algo)}\r\n      />\r\n      <SpeedSlider\r\n        onSpeedChange={onSpeedChange}\r\n        isVisualizing={isVisualizing}\r\n      />\r\n      <InputSizeSlider\r\n        onInputSizeChanged={onInputSizeChanged}\r\n        isVisualizing={isVisualizing}\r\n      />\r\n      <RandomizeButton onClick={onRandomize} />\r\n      <StartButton onClick={onStart} />\r\n      <NightToggle/>\r\n    </Row>\r\n  );\r\n};\r\nexport default HomeHeader;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nconst bubbleSort = async ({\r\n  array,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n} = {}) => {\r\n  let len = array.length;\r\n\r\n  for (let i = 0; i < len - 1; i++) {\r\n    for (let j = 0; j < len - 1 - i; j++) {\r\n      let newColorsArray = new Array(len).fill(0);\r\n      newColorsArray[len - 1 - i] = 3;\r\n      newColorsArray[j] = 1;\r\n      newColorsArray[j + 1] = 2;\r\n      setColorsArray(newColorsArray);\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n      if (array[j + 1] < array[j]) {\r\n        let temp = array[j + 1];\r\n        array[j + 1] = array[j];\r\n        array[j] = temp;\r\n\r\n        array = array.concat();\r\n        setArray(array);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default bubbleSort;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nconst insertionSort = async ({\r\n  array,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n} = {}) => {\r\n  let len = array.length;\r\n\r\n  for (let i = 1; i < len; i++) {\r\n    let currentValue = array[i];\r\n    let j = i - 1;\r\n\r\n    while (j >= 0 && array[j] > currentValue) {\r\n      let newColorsArray = new Array(len).fill(0);\r\n      newColorsArray[i] = 3;\r\n      newColorsArray[j] = 2;\r\n      newColorsArray[j + 1] = 1;\r\n      setColorsArray(newColorsArray);\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n      array[j + 1] = array[j];\r\n      array[j] = currentValue;\r\n      array = array.concat();\r\n      setArray(array);\r\n      j--;\r\n    }\r\n  }\r\n};\r\n\r\nexport default insertionSort;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nlet arr = [];\r\n\r\nconst mergeSort = async (\r\n  l,\r\n  r,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed\r\n) => {\r\n  if (l >= r) return;\r\n\r\n  let mid = Math.floor((l + r) / 2);\r\n  await mergeSort(l, mid, setArray, setColorsArray, visualizationSpeed);\r\n  await mergeSort(mid + 1, r, setArray, setColorsArray, visualizationSpeed);\r\n\r\n  let i = l;\r\n  let j = mid + 1;\r\n  let newColorsArray = new Array(arr.length).fill(0);\r\n  newColorsArray[i] = 2;\r\n  newColorsArray[j] = 2;\r\n  setColorsArray(newColorsArray);\r\n  await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n  while (i <= mid && j <= r) {\r\n    if (arr[i] > arr[j]) {\r\n      let index = j;\r\n\r\n      while (index !== i) {\r\n        let temp = arr[index];\r\n        arr[index] = arr[index - 1];\r\n        arr[index - 1] = temp;\r\n\r\n        newColorsArray[j] = 2;\r\n        newColorsArray[index - 1] = 1;\r\n        newColorsArray[index] = 0;\r\n        setColorsArray(newColorsArray.concat());\r\n        setArray(arr.concat());\r\n        await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n        index--;\r\n      }\r\n\r\n      newColorsArray[i] = 0;\r\n      newColorsArray[j] = 0;\r\n      i++;\r\n      mid++;\r\n      j++;\r\n    } else {\r\n      newColorsArray[i] = 0;\r\n      i++;\r\n    }\r\n\r\n    newColorsArray[i] = 2;\r\n    newColorsArray[j] = 2;\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n  }\r\n};\r\n\r\nconst inplaceMergeSortWrapper = async ({\r\n  array,\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n}) => {\r\n  arr = array.concat();\r\n\r\n  await mergeSort(\r\n    leftIndex,\r\n    rightIndex,\r\n    setArray,\r\n    setColorsArray,\r\n    visualizationSpeed\r\n  );\r\n};\r\n\r\nexport default inplaceMergeSortWrapper;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nlet arr = [];\r\n\r\nconst mergeSort = async (\r\n  l,\r\n  r,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed\r\n) => {\r\n  if (l >= r) return;\r\n\r\n  let mid = Math.floor((l + r) / 2);\r\n  await mergeSort(l, mid, setArray, setColorsArray, visualizationSpeed);\r\n  await mergeSort(mid + 1, r, setArray, setColorsArray, visualizationSpeed);\r\n\r\n  let i = l;\r\n  let j = mid + 1;\r\n  let it = 0;\r\n  let tempArr = new Array(r - l + 1);\r\n  let newColorsArray = new Array(arr.length).fill(0);\r\n\r\n  while (i <= mid && j <= r) {\r\n    newColorsArray = new Array(arr.length).fill(0);\r\n    newColorsArray[i] = 2;\r\n    newColorsArray[j] = 2;\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n    if (arr[i] > arr[j]) {\r\n      tempArr[it] = arr[j];\r\n      j++;\r\n    } else {\r\n      tempArr[it] = arr[i];\r\n      i++;\r\n    }\r\n\r\n    it++;\r\n  }\r\n\r\n  while (i <= mid) {\r\n    newColorsArray = new Array(arr.length).fill(0);\r\n    newColorsArray[i] = 2;\r\n    newColorsArray[j] = 2;\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n    tempArr[it] = arr[i];\r\n    it++;\r\n    i++;\r\n  }\r\n\r\n  while (j <= r) {\r\n    newColorsArray = new Array(arr.length).fill(0);\r\n    newColorsArray[i] = 2;\r\n    newColorsArray[j] = 2;\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n    tempArr[it] = arr[j];\r\n    it++;\r\n    j++;\r\n  }\r\n\r\n  it = 0;\r\n  for (let k = l; k <= r; k++, it++) {\r\n    arr[k] = tempArr[it];\r\n    newColorsArray = new Array(arr.length).fill(0);\r\n    newColorsArray[k] = 1;\r\n    newColorsArray[i - 1] = 2;\r\n    newColorsArray[j - 1] = 2;\r\n    setArray(arr.concat());\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n  }\r\n};\r\n\r\nconst mergeSortWrapper = async ({\r\n  array,\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n}) => {\r\n  arr = array.concat();\r\n\r\n  await mergeSort(\r\n    leftIndex,\r\n    rightIndex,\r\n    setArray,\r\n    setColorsArray,\r\n    visualizationSpeed\r\n  );\r\n};\r\n\r\nexport default mergeSortWrapper;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nlet arr = [];\r\n\r\nconst partition = async (\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed\r\n) => {\r\n  let i = leftIndex - 1;\r\n  let pivot = arr[rightIndex];\r\n  let newColorsArray = new Array(arr.length).fill(0);\r\n  newColorsArray[rightIndex] = 3;\r\n  setColorsArray(newColorsArray);\r\n  await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n  for (let j = leftIndex; j < rightIndex; j++) {\r\n    newColorsArray = new Array(arr.length).fill(0);\r\n    newColorsArray[i] = 2;\r\n    newColorsArray[j] = 2;\r\n    newColorsArray[rightIndex] = 3;\r\n    setColorsArray(newColorsArray.concat());\r\n    await asyncSetTimeout({timeout: visualizationSpeed});\r\n    if (arr[j] <= pivot) {\r\n      i = i + 1;\r\n\r\n      newColorsArray = new Array(arr.length).fill(0);\r\n      newColorsArray[i] = 1;\r\n      newColorsArray[j] = 2;\r\n      newColorsArray[rightIndex] = 3;\r\n      setColorsArray(newColorsArray.concat());\r\n      await asyncSetTimeout({timeout: visualizationSpeed * 1.5});\r\n\r\n      let temp = arr[i];\r\n      arr[i] = arr[j];\r\n      arr[j] = temp;\r\n      setArray(arr.concat());\r\n    }\r\n  }\r\n\r\n  let temp = arr[i + 1];\r\n  arr[i + 1] = arr[rightIndex];\r\n  arr[rightIndex] = temp;\r\n  setArray(arr.concat());\r\n  setColorsArray(new Array(arr.length).fill(0));\r\n  await asyncSetTimeout({timeout: visualizationSpeed});\r\n  return i + 1;\r\n};\r\n\r\nconst quickSort = async ({\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n} = {}) => {\r\n  if (leftIndex < rightIndex) {\r\n    let index = await partition(\r\n      leftIndex,\r\n      rightIndex,\r\n      setArray,\r\n      setColorsArray,\r\n      visualizationSpeed\r\n    );\r\n    await quickSort({\r\n      leftIndex: leftIndex,\r\n      rightIndex: index - 1,\r\n      setArray: setArray,\r\n      setColorsArray: setColorsArray,\r\n      visualizationSpeed: visualizationSpeed,\r\n    });\r\n    await quickSort({\r\n      leftIndex: index + 1,\r\n      rightIndex: rightIndex,\r\n      setArray: setArray,\r\n      setColorsArray: setColorsArray,\r\n      visualizationSpeed: visualizationSpeed,\r\n    });\r\n  }\r\n};\r\n\r\nconst quickSortLWrapper = async ({\r\n  array,\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n} = {}) => {\r\n  arr = [];\r\n  arr = array.concat();\r\n  await quickSort({\r\n    leftIndex: leftIndex,\r\n    rightIndex: rightIndex,\r\n    setArray: setArray,\r\n    setColorsArray: setColorsArray,\r\n    visualizationSpeed: visualizationSpeed,\r\n  });\r\n};\r\nexport default quickSortLWrapper;\r\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\r\n\r\nlet arr = [];\r\n\r\nconst quickSort = async ({\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n}) => {\r\n  if (leftIndex >= rightIndex) return;\r\n\r\n  let left = leftIndex;\r\n  let right = rightIndex;\r\n  let mid = Math.floor((leftIndex + rightIndex) / 2);\r\n  let pivot = arr[mid];\r\n\r\n  let newColorsArray = new Array(arr.length).fill(0);\r\n  newColorsArray[mid] = 3;\r\n  setColorsArray(newColorsArray);\r\n  console.log(visualizationSpeed);\r\n  await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n  while (left <= right) {\r\n    while (arr[left] < pivot) {\r\n      left++;\r\n      let newColorsArray = new Array(arr.length).fill(0);\r\n      newColorsArray[mid] = 3;\r\n      newColorsArray[left] = 2;\r\n      newColorsArray[right] = 2;\r\n      setColorsArray(newColorsArray);\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n    }\r\n    while (arr[right] > pivot) {\r\n      right--;\r\n      let newColorsArray = new Array(arr.length).fill(0);\r\n      newColorsArray[mid] = 3;\r\n      newColorsArray[left] = 2;\r\n      newColorsArray[right] = 2;\r\n      setColorsArray(newColorsArray);\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n    }\r\n    if (left <= right) {\r\n      let newColorsArray = new Array(arr.length).fill(0);\r\n      newColorsArray[mid] = 3;\r\n      newColorsArray[left] = 1;\r\n      newColorsArray[right] = 1;\r\n      setColorsArray(newColorsArray);\r\n\r\n      await asyncSetTimeout({timeout: visualizationSpeed});\r\n\r\n      const temp = arr[left];\r\n      arr[left] = arr[right];\r\n      arr[right] = temp;\r\n      left++;\r\n      right--;\r\n      setArray(arr);\r\n    }\r\n  }\r\n\r\n  await quickSort({\r\n    leftIndex: leftIndex,\r\n    rightIndex: right,\r\n    setArray: setArray,\r\n    setColorsArray: setColorsArray,\r\n    visualizationSpeed: visualizationSpeed,\r\n  });\r\n  await quickSort({\r\n    leftIndex: left,\r\n    rightIndex: rightIndex,\r\n    setArray: setArray,\r\n    setColorsArray: setColorsArray,\r\n    visualizationSpeed: visualizationSpeed,\r\n  });\r\n  newColorsArray = new Array(arr.length).fill(0);\r\n  setColorsArray(newColorsArray);\r\n  setArray(arr);\r\n  await asyncSetTimeout({timeout: visualizationSpeed});\r\n};\r\n\r\nconst quickSortLRWrapper = async ({\r\n  array,\r\n  leftIndex,\r\n  rightIndex,\r\n  setArray,\r\n  setColorsArray,\r\n  visualizationSpeed,\r\n}) => {\r\n  arr = [];\r\n  arr = array.concat();\r\n  await quickSort({\r\n    leftIndex: leftIndex,\r\n    rightIndex: rightIndex,\r\n    setArray: setArray,\r\n    setColorsArray: setColorsArray,\r\n    visualizationSpeed: visualizationSpeed,\r\n  });\r\n};\r\nexport default quickSortLRWrapper;\r\n","import React, { useState } from 'react';\r\nimport selectionSort from '../../algorithms/selection-sort';\r\nimport generateRandomizedArray from '../../helpers/randomizeArray';\r\nimport SortingBar from '../SortingBar/SortingBar';\r\nimport HomeHeader from '../HomeHeader/HomeHeader';\r\nimport '../../index.css';\r\nimport bubbleSort from '../../algorithms/bubble-sort';\r\nimport insertionSort from '../../algorithms/insertion-sort';\r\nimport inplaceMergeSortWrapper from '../../algorithms/inplace-merge-sort';\r\nimport mergeSortWrapper from '../../algorithms/merge-sort';\r\nimport quickSortLWrapper from '../../algorithms/quick-sort-l';\r\nimport quickSortLRWrapper from '../../algorithms/quick-sort-lr';\r\nimport StartButton from '../HomeHeader/StartButton';\r\nimport './Home.css'\r\n\r\n\r\nconst Home = () => {\r\n  const arraySize = 30;\r\n  const [isVisualizing, setIsVisualizing] = useState(false);\r\n  const [randomizedArray, setRandomizedArray] = useState(\r\n    generateRandomizedArray({ arraySize: arraySize })\r\n  );\r\n  const [colorsArray, setColorsArray] = useState(\r\n    new Array(randomizedArray.length).fill(0)\r\n  );\r\n  const [visualizationSpeed, setVisualizationSpeed] = useState(30);\r\n  const [maxItem, setMaxItem] = useState(Math.max(...randomizedArray));\r\n  const [currentAlgorithm, setCurrentAlgorithm] = useState('Bubble Sort');\r\n  const algorithms = [\r\n    'Bubble Sort',\r\n    'Insertion Sort',\r\n    'Selection Sort',\r\n    'QuickSort (L)',\r\n    'QuickSort (LR)',\r\n    'Merge Sort',\r\n    'Inplace Merge Sort',\r\n  ];\r\n\r\n  const onRandomize = () => {\r\n    if (isVisualizing) return;\r\n    const nextRandomizedArray = generateRandomizedArray({\r\n      arraySize: randomizedArray.length,\r\n    });\r\n    setRandomizedArray(nextRandomizedArray);\r\n    setMaxItem(Math.max(...nextRandomizedArray));\r\n  };\r\n  const onInputSizeChanged = (val) => {\r\n    if (isVisualizing) return;\r\n    const nextRandomizedArray = generateRandomizedArray({ arraySize: val });\r\n    setRandomizedArray(nextRandomizedArray);\r\n    setMaxItem(Math.max(...nextRandomizedArray));\r\n    setColorsArray(new Array(nextRandomizedArray.length).fill(0));\r\n  };\r\n  const onSpeedChange = (val) => {\r\n    if (isVisualizing) return;\r\n    setVisualizationSpeed(val);\r\n  };\r\n\r\n  const onVisualize = async () => {\r\n    if (isVisualizing) return;\r\n\r\n    setIsVisualizing(true);\r\n    \r\n    switch (currentAlgorithm) {\r\n      case 'Selection Sort':\r\n        await selectionSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n  break;\r\n\r\n      case 'Bubble Sort':\r\n        onRandomize();\r\n        await bubbleSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Insertion Sort':\r\n        await insertionSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'QuickSort (L)':\r\n        await quickSortLWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n      case 'QuickSort (LR)':\r\n        await quickSortLRWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Merge Sort':\r\n        await mergeSortWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Inplace Merge Sort':\r\n        await inplaceMergeSortWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setIsVisualizing(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', height: '700px'}}>\r\n      <HomeHeader\r\n        algorithms={algorithms}\r\n        onAlgorithmChange={setCurrentAlgorithm}\r\n        currentAlgorithm={currentAlgorithm}\r\n        onRandomize={onRandomize}\r\n        onInputSizeChanged={onInputSizeChanged}\r\n        onSpeedChange={onSpeedChange}\r\n        onStart={onVisualize}\r\n        isVisualizing={isVisualizing}\r\n        \r\n      />\r\n      <div\r\n      style={{backgroundColor:'white',\r\n      padding: '30px'}}/>\r\n      <div\r\n        style={{\r\n          //marginTop: '100px',\r\n          \r\n          backgroundColor: 'rgba(192,192,192)',\r\n          display: 'flex',\r\n          height: '50%',\r\n          width: '80%',\r\n          \r\n          margin: 'auto',\r\n          flexDirection: 'row',\r\n          alignItems: 'end',\r\n          padding: '30px 0px 0px 0px',\r\n          color: 'orange'\r\n        }}\r\n      >\r\n        {randomizedArray.map((item, index) => {\r\n          const height = (item / maxItem) * 100;\r\n          const width = (1 / randomizedArray.length) * 100;\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'end',\r\n                width: `${width}%`,\r\n              }}\r\n            >\r\n              <SortingBar\r\n                colorCode={colorsArray[index]}\r\n                style={{\r\n                  height: `calc(${height}% - 20px)`,\r\n                  width: '100%',\r\n                  margin: 'auto 10% 0 10%',\r\n                }}\r\n              ></SortingBar>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from './components/Home/Home';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Home></Home>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}