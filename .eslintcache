[{"F:\\PROJECT\\Sorting-Visualizer\\src\\index.js":"1","F:\\PROJECT\\Sorting-Visualizer\\src\\App.js":"2","F:\\PROJECT\\Sorting-Visualizer\\src\\reportWebVitals.js":"3","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\Home\\Home.jsx":"4","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\merge-sort.js":"5","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\selection-sort.js":"6","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\bubble-sort.js":"7","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\insertion-sort.js":"8","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\inplace-merge-sort.js":"9","F:\\PROJECT\\Sorting-Visualizer\\src\\helpers\\randomizeArray.js":"10","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\quick-sort-lr.js":"11","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\quick-sort-l.js":"12","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\HomeHeader.jsx":"13","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\SortingBar\\SortingBar.jsx":"14","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\StartButton.jsx":"15","F:\\PROJECT\\Sorting-Visualizer\\src\\helpers\\asyncSetTimeout.js":"16","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\SpeedSlider.jsx":"17","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\InputSizeSlider.jsx":"18","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\AlgorithmDropDown.jsx":"19","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\RandomizeButton.jsx":"20","F:\\PROJECT\\Sorting-Visualizer\\src\\assets\\index.js":"21","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\NightToggle.jsx":"22","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\constants.jsx":"23"},{"size":517,"mtime":1637680685848,"results":"24","hashOfConfig":"25"},{"size":158,"mtime":1637680685138,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1637680685850,"results":"27","hashOfConfig":"25"},{"size":6342,"mtime":1637853761168,"results":"28","hashOfConfig":"25"},{"size":2216,"mtime":1637680685206,"results":"29","hashOfConfig":"25"},{"size":864,"mtime":1637854254351,"results":"30","hashOfConfig":"25"},{"size":788,"mtime":1637854431396,"results":"31","hashOfConfig":"25"},{"size":769,"mtime":1637680685189,"results":"32","hashOfConfig":"25"},{"size":1806,"mtime":1637680685175,"results":"33","hashOfConfig":"25"},{"size":285,"mtime":1637825965714,"results":"34","hashOfConfig":"25"},{"size":2634,"mtime":1637680685808,"results":"35","hashOfConfig":"25"},{"size":2554,"mtime":1637854431397,"results":"36","hashOfConfig":"25"},{"size":2110,"mtime":1637841004907,"results":"37","hashOfConfig":"25"},{"size":416,"mtime":1637680685840,"results":"38","hashOfConfig":"25"},{"size":572,"mtime":1637852720237,"results":"39","hashOfConfig":"25"},{"size":165,"mtime":1637680685842,"results":"40","hashOfConfig":"25"},{"size":700,"mtime":1637680685835,"results":"41","hashOfConfig":"25"},{"size":743,"mtime":1637680685830,"results":"42","hashOfConfig":"25"},{"size":1038,"mtime":1637738925242,"results":"43","hashOfConfig":"25"},{"size":605,"mtime":1637754308684,"results":"44","hashOfConfig":"25"},{"size":146,"mtime":1637680685817,"results":"45","hashOfConfig":"25"},{"size":2153,"mtime":1637819997895,"results":"46","hashOfConfig":"25"},{"size":280,"mtime":1637848088694,"results":"47","hashOfConfig":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"wzmng5",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"iqbzxs","F:\\PROJECT\\Sorting-Visualizer\\src\\index.js",[],["99","100"],"F:\\PROJECT\\Sorting-Visualizer\\src\\App.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\reportWebVitals.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\Home\\Home.jsx",["101"],"import React, { useState } from 'react';\r\nimport selectionSort from '../../algorithms/selection-sort';\r\nimport generateRandomizedArray from '../../helpers/randomizeArray';\r\nimport SortingBar from '../SortingBar/SortingBar';\r\nimport HomeHeader from '../HomeHeader/HomeHeader';\r\nimport '../../index.css';\r\nimport bubbleSort from '../../algorithms/bubble-sort';\r\nimport insertionSort from '../../algorithms/insertion-sort';\r\nimport inplaceMergeSortWrapper from '../../algorithms/inplace-merge-sort';\r\nimport mergeSortWrapper from '../../algorithms/merge-sort';\r\nimport quickSortLWrapper from '../../algorithms/quick-sort-l';\r\nimport quickSortLRWrapper from '../../algorithms/quick-sort-lr';\r\nimport StartButton from '../HomeHeader/StartButton';\r\nimport './Home.css'\r\n\r\n\r\nconst Home = () => {\r\n  const arraySize = 30;\r\n  const [isVisualizing, setIsVisualizing] = useState(false);\r\n  const [randomizedArray, setRandomizedArray] = useState(\r\n    generateRandomizedArray({ arraySize: arraySize })\r\n  );\r\n  const [colorsArray, setColorsArray] = useState(\r\n    new Array(randomizedArray.length).fill(0)\r\n  );\r\n  const [visualizationSpeed, setVisualizationSpeed] = useState(30);\r\n  const [maxItem, setMaxItem] = useState(Math.max(...randomizedArray));\r\n  const [currentAlgorithm, setCurrentAlgorithm] = useState('Bubble Sort');\r\n  const algorithms = [\r\n    'Bubble Sort',\r\n    'Insertion Sort',\r\n    'Selection Sort',\r\n    'QuickSort (L)',\r\n    'QuickSort (LR)',\r\n    'Merge Sort',\r\n    'Inplace Merge Sort',\r\n  ];\r\n\r\n  const onRandomize = () => {\r\n    if (isVisualizing) return;\r\n    const nextRandomizedArray = generateRandomizedArray({\r\n      arraySize: randomizedArray.length,\r\n    });\r\n    setRandomizedArray(nextRandomizedArray);\r\n    setMaxItem(Math.max(...nextRandomizedArray));\r\n  };\r\n  const onInputSizeChanged = (val) => {\r\n    if (isVisualizing) return;\r\n    const nextRandomizedArray = generateRandomizedArray({ arraySize: val });\r\n    setRandomizedArray(nextRandomizedArray);\r\n    setMaxItem(Math.max(...nextRandomizedArray));\r\n    setColorsArray(new Array(nextRandomizedArray.length).fill(0));\r\n  };\r\n  const onSpeedChange = (val) => {\r\n    if (isVisualizing) return;\r\n    setVisualizationSpeed(val);\r\n  };\r\n\r\n  const onVisualize = async () => {\r\n    if (isVisualizing) return;\r\n\r\n    setIsVisualizing(true);\r\n    \r\n    switch (currentAlgorithm) {\r\n      case 'Selection Sort':\r\n        await selectionSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n  break;\r\n\r\n      case 'Bubble Sort':\r\n        onRandomize();\r\n        await bubbleSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Insertion Sort':\r\n        await insertionSort({\r\n          array: randomizedArray,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'QuickSort (L)':\r\n        await quickSortLWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n      case 'QuickSort (LR)':\r\n        await quickSortLRWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Merge Sort':\r\n        await mergeSortWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      case 'Inplace Merge Sort':\r\n        await inplaceMergeSortWrapper({\r\n          array: randomizedArray,\r\n          leftIndex: 0,\r\n          rightIndex: randomizedArray.length - 1,\r\n          setArray: setRandomizedArray,\r\n          visualizationSpeed: visualizationSpeed,\r\n          setColorsArray: setColorsArray,\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setIsVisualizing(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', height: '700px'}}>\r\n      <HomeHeader\r\n        algorithms={algorithms}\r\n        onAlgorithmChange={setCurrentAlgorithm}\r\n        currentAlgorithm={currentAlgorithm}\r\n        onRandomize={onRandomize}\r\n        onInputSizeChanged={onInputSizeChanged}\r\n        onSpeedChange={onSpeedChange}\r\n        onStart={onVisualize}\r\n        isVisualizing={isVisualizing}\r\n        \r\n      />\r\n      <div\r\n      style={{backgroundColor:'white',\r\n      padding: '30px'}}/>\r\n      <div\r\n        style={{\r\n          //marginTop: '100px',\r\n          \r\n          backgroundColor: 'rgba(192,192,192)',\r\n          display: 'flex',\r\n          height: '50%',\r\n          width: '80%',\r\n          \r\n          margin: 'auto',\r\n          flexDirection: 'row',\r\n          alignItems: 'end',\r\n          padding: '30px 0px 0px 0px',\r\n          color: 'orange'\r\n        }}\r\n      >\r\n        {randomizedArray.map((item, index) => {\r\n          const height = (item / maxItem) * 100;\r\n          const width = (1 / randomizedArray.length) * 100;\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'end',\r\n                width: `${width}%`,\r\n              }}\r\n            >\r\n              <SortingBar\r\n                colorCode={colorsArray[index]}\r\n                style={{\r\n                  height: `calc(${height}% - 20px)`,\r\n                  width: '100%',\r\n                  margin: 'auto 10% 0 10%',\r\n                }}\r\n              ></SortingBar>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\merge-sort.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\selection-sort.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\bubble-sort.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\insertion-sort.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\inplace-merge-sort.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\helpers\\randomizeArray.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\quick-sort-lr.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\algorithms\\quick-sort-l.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\HomeHeader.jsx",["102","103","104"],"import { Row } from 'antd';\r\nimport React from 'react';\r\nimport assets from '../../assets';\r\nimport AlgorithmDropDown from './AlgorithmDropDown';\r\nimport InputSizeSlider from './InputSizeSlider';\r\nimport RandomizeButton from './RandomizeButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport StartButton from './StartButton';\r\nimport NightToggle from './NightToggle';\r\nimport \"./HomeHeader.css\";\r\n\r\nconst HomeHeader = ({\r\n  algorithms,\r\n  onAlgorithmChange,\r\n  currentAlgorithm,\r\n  onSpeedChange,\r\n  onInputSizeChanged,\r\n  onRandomize,\r\n  \r\n  onStart,\r\n  isVisualizing,\r\n}) => {\r\n  const openUrl = (url) => {\r\n    window.open(url, '_blank')?.focus();\r\n  };\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n  return (\r\n    <Row className=\"important\"\r\n      style={{\r\n        background: '#fff',\r\n        color: 'white',\r\n        padding: '10px 0px 10px 0px',\r\n        width: '100%',\r\n        position: 'fixed',\r\n  \r\n    width: '100%',\r\n    boxShadow: '0 .5rem 1.5rem rgba(0,0,0,.2)',\r\n    display: 'flex',\r\n    \r\n   \r\n    height: '10rem',\r\n    \r\n      }}\r\n      align=\"middle\"\r\n      justify=\"space-around\"\r\n    >\r\n      <div className=\"heading\"\r\n      width={125}\r\n      height={50}\r\n      style={{ cursor: 'pointer' }}\r\n      onClick =\r\n        {refreshPage}>\r\n          <a href=\"index.html\" class=\"logo\">\r\n      <i class=\"fab fa-sellsy\" style = {{fontSize: '40px' }}></i>\r\n       <span style = {{fontSize: '40px', marginLeft: '8px', fontWeight: 'bold'}} >Sorté.</span>\r\n       </a>\r\n          </div>  \r\n      \r\n\r\n      <AlgorithmDropDown\r\n        currentAlgorithm={currentAlgorithm}\r\n        algorithms={algorithms}\r\n        onAlgorithmChange={(algo) => onAlgorithmChange(algo)}\r\n      />\r\n      <SpeedSlider\r\n        onSpeedChange={onSpeedChange}\r\n        isVisualizing={isVisualizing}\r\n      />\r\n      <InputSizeSlider\r\n        onInputSizeChanged={onInputSizeChanged}\r\n        isVisualizing={isVisualizing}\r\n      />\r\n      <RandomizeButton onClick={onRandomize} />\r\n      <StartButton onClick={onStart} />\r\n      <NightToggle/>\r\n    </Row>\r\n  );\r\n};\r\nexport default HomeHeader;\r\n","F:\\PROJECT\\Sorting-Visualizer\\src\\components\\SortingBar\\SortingBar.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\StartButton.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\helpers\\asyncSetTimeout.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\SpeedSlider.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\InputSizeSlider.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\AlgorithmDropDown.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\RandomizeButton.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\assets\\index.js",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\NightToggle.jsx",[],"F:\\PROJECT\\Sorting-Visualizer\\src\\components\\HomeHeader\\constants.jsx",[],["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":23,"column":9,"nodeType":"113","messageId":"114","endLine":23,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":38,"column":5,"nodeType":"119","messageId":"120","endLine":38,"endColumn":10},{"ruleId":"107","replacedBy":"121"},{"ruleId":"109","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'StartButton' is defined but never used.","Identifier","unusedVar","'assets' is defined but never used.","'openUrl' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected",["123"],["124"],"no-global-assign","no-unsafe-negation"]